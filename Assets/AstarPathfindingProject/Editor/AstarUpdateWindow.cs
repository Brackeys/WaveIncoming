// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEditor;
using UnityEngine;

namespace Pathfinding
{
	public class AstarUpdateWindow : EditorWindow
	{

		public static GUIStyle largeStyle;
		public static GUIStyle normalStyle;
		public System.Version version;
		public string summary;
		public string downloadURL;
		public string raw;
		bool setReminder = false;

		public static AstarUpdateWindow Init () {
			// Get existing open window or if none, make a new one:

			AstarUpdateWindow window = EditorWindow.GetWindow<AstarUpdateWindow> (true,"",true);
				//ScriptableObject.CreateInstance<AstarUpdateWindow>();//new AstarUpdateWindow();//(AstarUpdateWindow)EditorWindow.GetWindow (typeof (AstarUpdateWindow));
			//window.minSize = new Vector2 (600, 200);
			//window.maxSize = new Vector2 (600, 300);
			window.position = new Rect (Screen.currentResolution.width/2 - 300,Mathf.Max (5,Screen.currentResolution.height/3 - 150), 600, 400);
			//window.position = new Rect ( 
			//window.ShowUtility ();

			window.title = "New Version of the A* Pathfinding Project";
			return window;
		}

		public void OnDestroy () {
			if ( version != null && !setReminder ) {
				Debug.Log ("Closed window, reminding again tomorrow");
				EditorPrefs.SetString ("AstarRemindUpdateDate", System.DateTime.UtcNow.AddDays(1).ToString(System.Globalization.CultureInfo.InvariantCulture));
				EditorPrefs.SetString ("AstarRemindUpdateVersion", version.ToString() );
			}
		}

		void OnGUI () {

			if ( largeStyle == null ) {
				largeStyle = EditorStyles.largeLabel;
				largeStyle.fontSize = 32;
				largeStyle.alignment = TextAnchor.UpperCenter;
				largeStyle.richText = true;
				
				normalStyle = EditorStyles.label;
				normalStyle.wordWrap = true;
				normalStyle.richText = true;
			}

			if ( version == null ) {
				return;
			}

			//GUILayout.BeginHorizontal ();
			//GUILayout.FlexibleSpace();
			GUILayout.Label ("New Update Available!", largeStyle);
			GUILayout.Label ("There is a new version of the <b>A* Pathfinding Project</b> available for download.\n" +
			    "The new version is <b>"+version.ToString()+"</b> you have <b>" + AstarPath.Version.ToString()+"</b>\n\n"+
			                 "<i>Summary:</i>\n"+summary, normalStyle
			);

			GUILayout.FlexibleSpace ();

			GUILayout.BeginHorizontal ();
			GUILayout.FlexibleSpace ();

			GUILayout.BeginVertical ();

			Color col = GUI.color;
			GUI.backgroundColor *= new Color ( 0.5f,  1f, 0.5f);
			if (GUILayout.Button ("Take me to the download page!", GUILayout.Height ( 30 ), GUILayout.MaxWidth(300))) {
				Application.OpenURL ( downloadURL );
			}
			GUI.backgroundColor = col;


			if (GUILayout.Button ("What's new? (full changelog)")) {
				Application.OpenURL (AstarPathEditor.GetURL ("changelog"));
			}

			GUILayout.EndVertical ();

			GUILayout.FlexibleSpace ();
			GUILayout.EndHorizontal ();

			//GUILayout.Space ( 90 );
			GUILayout.FlexibleSpace ();

			GUILayout.BeginHorizontal ();
			//GUILayout.FlexibleSpace ();

			if ( GUILayout.Button ("Skip this version", GUILayout.MaxWidth (100) ) ) {
				EditorPrefs.SetString ("AstarSkipUpToVersion", version.ToString());
				setReminder = true;
				Close();
			}

			if ( GUILayout.Button ("Remind me later ( 1 week )", GUILayout.MaxWidth (200) ) ) {
				EditorPrefs.SetString ("AstarRemindUpdateDate", System.DateTime.UtcNow.AddDays(7).ToString(System.Globalization.CultureInfo.InvariantCulture));
				EditorPrefs.SetString ("AstarRemindUpdateVersion", version.ToString() );
				setReminder = true;
				Close();
			}

			GUILayout.FlexibleSpace ();
			GUILayout.EndHorizontal ();
			//GUILayout.FlexibleSpace();
			//GUILayout.EndHorizontal ();
		}
	}
}

